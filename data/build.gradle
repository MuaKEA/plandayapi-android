apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion sdks.compileSdkVersion
    buildToolsVersion sdks.buildToolsVersion
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    defaultConfig {
        minSdkVersion sdks.minSdkVersion
        targetSdkVersion sdks.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Create BuildConfig variables
        buildConfigField "String", "client_id", keystoreProperties["client_id"]
        buildConfigField "String", "refresh_token", keystoreProperties["refresh_token"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    implementation("com.squareup.retrofit2:retrofit:${versions.retrofit}")
    implementation("com.squareup.retrofit2:converter-gson:${versions.retrofit}") {
        exclude module: "retrofit:${versions.retrofit}"
    }
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'

}